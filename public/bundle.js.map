{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://worldify/./src/modules/auth.js","webpack://worldify/webpack/bootstrap","webpack://worldify/webpack/runtime/define property getters","webpack://worldify/webpack/runtime/hasOwnProperty shorthand","webpack://worldify/webpack/runtime/make namespace object","webpack://worldify/./src/modules/pages/app/dashboard.js","webpack://worldify/./src/index.js","webpack://worldify/./src/modules/pages/account/login.js","webpack://worldify/./src/modules/pages/account/signup.js","webpack://worldify/./src/modules/pages/account/onboarding.js","webpack://worldify/./src/modules/pages/account/send_mail_verification.js","webpack://worldify/./src/modules/pages/account/verify_mail.js"],"sourcesContent":["\nconst TOKEN_KEY = 'wized_token';\n\nexport function getCookie(name) {\n    const value = \"; \" + document.cookie;\n    const parts = value.split(\"; \" + name + \"=\");\n    if (parts.length === 2) return parts.pop().split(\";\").shift();\n    return null; // or undefined, depending on your needs\n}\n\nexport function setCookie(value) {\n    document.cookie = \"wized_token=\" + value + \";path=/\";\n}\n\nexport function deleteCookie(name) {\n    document.cookie = name + '=; expires=Thu, 01 Jan 1970 00:00:01 GMT; path=/;';\n}\n\nexport function check_password(x,y) {\n\tconst constraint_characters = document.getElementById(\"password_constraint_characters\");\n  const constraint_upperlower = document.getElementById(\"password_constraint_upperlower\");\n  const constraint_number = document.getElementById(\"password_constraint_number\");\n  const constraint_special = document.getElementById(\"password_constraint_special\");\n  const constraint_correctness = document.getElementById(\"password_constraint_correctness\");\n  \n  // Initialize all constraints to false\n    var isLengthValid = false;\n    var isUpperLowerValid = false;\n    var isNumberValid = false;\n    var isSpecialValid = false;\n    var isCorrectnessValid = false;\n\n    // Check length 5-20 characters\n    if (x.length >= 5 && x.length <= 20) {\n        constraint_characters.classList.remove(\"text-color-red\");\n        isLengthValid = true;\n    } else {\n    \t\tif (!constraint_characters.classList.contains(\"text-color-red\")) {\n        \tconstraint_characters.classList.add(\"text-color-red\");\n        }\n        \n    }\n\n    // Check at least one upper and one lower case \n    if (/[a-z]/.test(x) && /[A-Z]/.test(x)) {\n        constraint_upperlower.classList.remove(\"text-color-red\");\n        isUpperLowerValid = true;\n    } else {\n        if (!constraint_upperlower.classList.contains(\"text-color-red\")){\n        \tconstraint_upperlower.classList.add(\"text-color-red\");\n        }\n    }\n\n    // Check at least one number\n    if (/\\d/.test(x)) {\n        constraint_number.classList.remove(\"text-color-red\");\n        isNumberValid = true;\n    } else {\n        if (!constraint_number.classList.contains(\"text-color-red\")) {\n        \tconstraint_number.classList.add(\"text-color-red\");\n        }\n    }\n\n    // Check at least one special character\n    if (/[!@#$%^&*(),.?\":{}|<>]/.test(x)) {\n        constraint_special.classList.remove(\"text-color-red\");\n        isSpecialValid = true;\n    } else {\n        if (!constraint_special.classList.contains(\"text-color-red\")) {\n        \tconstraint_special.classList.add(\"text-color-red\");\n        }\n    }\n\n    // Check correctness of the two passwords\n    if (x === y & x !== \"\") {\n        constraint_correctness.classList.remove(\"text-color-red\");\n        isCorrectnessValid = true;\n    } else {\n        if (!constraint_correctness.classList.contains(\"text-color-red\")) {\n        \tconstraint_correctness.classList.add(\"text-color-red\");\n        }\n    }\n\n    // Only if all conditions are met, show the submit button.\n    if (isLengthValid && isUpperLowerValid && isNumberValid && isSpecialValid && isCorrectnessValid){\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function getQueryParam(paramName) {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get(paramName);\n}\n\nexport async function sendVerificationMail (email,sendgrid_template,redirect_uri) {\n\n    // Define the query parameters\n    const formData = new FormData();\n\n    formData.append('email',email);\n    formData.append('sendgrid_template',sendgrid_template);\n    formData.append('redirect_uri',redirect_uri);\n\n    try {\n        const response = await fetch(AUTH_URL + '/auth/magic-link', {\n            method: 'POST',\n            headers: {},\n            body: formData\n        });\n\n        const jsonResponse = await response.json();\n\n        if (response.ok) {\n            return jsonResponse;\n\n        } else {\n            return jsonResponse;\n        }\n    } catch (error) {\n        console.error('Error while sending verification mail:', error);\n    }\n\n}\n\n/**\n * Verifies the provided token by making a request to the authentication endpoint.\n * If the token is valid and the response contains user details, it sets the global `currentUser` variable.\n * \n * @param {string} token - The authentication token to verify.\n * @returns {boolean} - Returns `true` if the token is verified successfully, otherwise returns `false`.\n */\n\nexport async function verifyToken(token) {\n    \n    try {\n        // Make a GET request to the authentication endpoint with the token in the headers.\n        const response = await fetch(AUTH_URL + '/auth/me', {\n            method: 'GET',\n            headers: {\n                'Authorization': 'Bearer ' + token\n            }\n        });\n        \n        // Parse the response to JSON.\n        const data = await response.json();\n\n        // Check if the response status indicates success (e.g., 200 OK).\n        if (response.ok) {\n            // If the token is authenticated and user details are provided in the response...\n            if (data.id) {\n\n                return true;\n\n            } else {\n\n                return false;\n            }\n        } else {\n            // Log an error message if the token verification failed. \n            // Use the provided error message from the response or a default \"Unknown error\" message.\n            console.error('Token verification failed:', data.message || 'Unknown error');\n            return false;\n        }\n    } catch (error) {\n        // Log any errors that occurred during the token verification process.\n        console.error('Error verifying token:', error);\n        return false;\n    }\n}\n\nexport async function getUser(token) {\n    \n    try {\n        // Make a GET request to the authentication endpoint with the token in the headers.\n        const response = await fetch(AUTH_URL + '/auth/me', {\n            method: 'GET',\n            headers: {\n                'Authorization': 'Bearer ' + token\n            }\n        });\n        \n        // Parse the response to JSON.\n        const data = await response.json();\n\n        // Check if the response status indicates success (e.g., 200 OK).\n        if (response.ok) {\n            // If the token is authenticated and user details are provided in the response...\n            if (data.id) {\n\n                return data;\n\n            } else {\n\n                return response;\n            }\n        } else {\n            // Log an error message if the token verification failed. \n            // Use the provided error message from the response or a default \"Unknown error\" message.\n            console.error('Token verification failed:', data.message || 'Unknown error');\n            return false;\n        }\n    } catch (error) {\n        // Log any errors that occurred during the token verification process.\n        console.error('Error verifying token:', error);\n        return false;\n    }\n}\n\nasync function resetPassword() {\n\n    const wized_token = getCookie(\"wized_token\");\n    const token = 'Bearer ' + wized_token;\n\n    const password = document.querySelector('[w-el=\"passwordReset_password_1\"]').value;\n    const errorWrapper = document.querySelector('[w-el=\"passwordReset_error\"]');\n\n    const formData = new FormData();\n\n    formData.append('password',password);\n\n    try {\n\n        buttonLoader.classList.remove('hide');\n        // Send a POST request to your authentication endpoint\n        const response = await fetch(authUrl+\"/auth/reset-password\", {\n            method: \"POST\",\n            headers: {\n                'Authorization': token\n            },\n            body: formData\n        });\n\n        // Parse the response\n        const data = await response.json();\n\n        buttonLoader.classList.add('hide');\n\n        // Check the response\n        if (response.ok) {\n            \n            redirectToLogin();\n        } else {\n\n            if (errorWrapper.hasChildNodes) {\n                while (errorWrapper.firstChild) {\n                    errorWrapper.removeChild(errorWrapper.firstChild);\n                }\n            }\n            const para = document.createElement('p');\n            para.classList.add('error-message-text');\n\n            para.textContent = \"Something went wrong... Please try again in a few minutes. If the error persists please contact us: hello@getworldify.com.\";\n\n            errorWrapper.appendChild(para);\n            errorWrapper.classList.remove('hide');\n            // Display an error message\n            console.error(\"Login failed:\", data.message || \"Unknown error\");\n        }\n    } catch (error) {\n        console.error(\"Error during password reset:\", error);\n    }\n}\n\nasync function sendPasswordResetLink(){\n    const emailInput = document.querySelector('[w-el=\"passwordReset_email\"]').value;\n    const buttonLoader = document.querySelector('[w-el=\"button_loader\"]');\n    const errorWrapper = document.querySelector('[w-el=\"passwordReset_error\"]');\n\n    try {\n\n        buttonLoader.classList.remove('hide');\n\n        var response = await sendVerificationMail(email=emailInput, sendgrid_template=\"password_reset\",redirect_uri=domainUrl+\"/account/reset-password\");\n\n        buttonLoader.classList.add('hide');\n\n        // Check the response\n        if (response.message.success) {\n            // Successful signup\n\n            // Redirect to Page where you can reset your password\n            redirectToPasswordPending();\n        } else {\n\n            if (errorWrapper.hasChildNodes) {\n                while (errorWrapper.firstChild) {\n                    errorWrapper.removeChild(errorWrapper.firstChild);\n                }\n            }\n            const para = document.createElement('p');\n            para.classList.add('error-message-text');\n\n            if (response.message === \"No user found for that email.\") {\n                const signupLink = domainUrl+\"/account/signup\"; // replace with your signup link\n                para.innerHTML = \"We couldn't find a user for the email you provided. If you want to signup for a new account, please click <a href='\" + signupLink + \"'>here</a>.\";\n\n            } else if (response.message === \"email is required but was not suppiled.\") {\n                para.textContent = \"You did not provide an email address. Please type in the email you used for the account.\";\n            } else {\n                para.textContent = \"Something went wrong... Please try again in a few minutes. If the error persists please contact us: hello@getworldify.com.\"\n            }\n\n            errorWrapper.appendChild(para);\n            errorWrapper.classList.remove('hide');\n            // Display an error message\n            console.error(\"Login failed:\", response.message || \"Unknown error\");\n        }\n    } catch (error) {\n        console.error(\"Error during login:\", error);\n    }\n}\n\nexport async function checkAuthentication() {\n    \n    const token = getCookie(TOKEN_KEY);\n    \n    if (!token) {\n        redirectToLogin();\n    } else {\n        const isAuthenticated = await verifyToken(token);\n        if (!isAuthenticated) {\n            deleteCookie(TOKEN_KEY);\n            redirectToLogin();\n        }\n    }\n}\n\nexport async function displayUser() {\n    const firstnames = document.querySelectorAll('[w-el=\"firstname\"]');\n    const lastnames = document.querySelectorAll('[w-el=\"lastname\"]');\n    const emails = document.querySelectorAll('[w-el=\"email\"]');\n\n    const token = getCookie('wized_token');\n    const user = await getUser(token);\n\n    firstnames.forEach (firstname => {firstname.textContent = user.firstname});\n    lastnames.forEach (lastname => {lastname.textContent = user.lastname});\n    emails.forEach (email => {email.textContent = user.email});\n\n}\n\nexport function redirectToLogin() {\n    window.location.href = DOMAIN_URL + '/account/login';\n}\n\nexport function redirectToEmailVerification() {\n    window.location.href = DOMAIN_URL + '/account/send-email-verification';\n}\n\nexport function redirectToDashboard () {\n    window.location.href = DOMAIN_URL + '/app/dashboard';\n}\n\nexport function redirectToOnboarding () {\n    window.location.href = DOMAIN_URL + '/account/onboarding';\n}\n\nexport function redirectToVerificationPending () {\n    window.location.href = DOMAIN_URL + '/account/email-verification-pending';\n}\n\nexport function redirectToPasswordPending() {\n    window.location.href = DOMAIN_URL + '/account/password-reset-pending';\n}\n\nexport function redirectVerifyEmail () {\n    window.location.href = DOMAIN_URL + '/account/verify-email';\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const { getCookie } = require(\"../../auth\");\n\nfunction createDashboardCard (module,is_pinned=false, is_completed=false) {\n    let pinClass = \"\";\n    let completedClass = \"\";\n    let completedText = \"Open Task\";\n    if (is_pinned) {    \n        pinClass = \"is-pinned\";\n    } else if (is_completed) {\n        completedClass = \"is-completed\";\n        completedText = \"Completed\";\n        pinClass = 'hide';\n    }\n    return `\n<div w-el=\"module_item\" id=${module.id} class=\"card is-no-margin is-hover\">\n    <div class=\"task-item\">\n        <div class=\"task_progress-color-wrapper\">\n            <div class=\"task_progress-color background-color-light-blue ${completedClass}\"></div>\n        </div>\n        <div class=\"task_meta-wrapper\">\n            <div w-el=\"module_pinButton\" class=\"pin-button\">\n                <div class=\"pin-button_icon w-embed ${pinClass}\">\n                    <svg width=\"74\" height=\"74\" viewBox=\"0 0 74 74\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M19.6866 53.3504L21.1008 51.9362L19.6866 50.522L6.38494 37.2203C5.57291 36.4083 5.29235 35.6333 5.28076 35.0128C5.2693 34.4017 5.513 33.6921 6.22866 32.9764C10.6477 28.5574 19.2996 27.1345 28.1763 31.2918L29.3518 31.8423L30.3334 30.9928L42.402 20.5469L43.3574 19.72L43.021 18.5021C41.4916 12.9662 40.9287 8.01808 41.2424 5.48661C41.394 4.34834 41.7859 3.66432 42.1421 3.30805C42.5181 2.93204 42.9181 2.8003 43.2936 2.81512C43.6811 2.83041 44.2172 3.01213 44.7901 3.58504L71.0001 29.795C71.5566 30.3516 71.7439 30.8886 71.7609 31.2881C71.7773 31.675 71.6438 32.0759 71.2769 32.4428C70.9434 32.7763 70.2533 33.161 69.0741 33.3181C66.5427 33.6319 61.5944 33.0689 56.0583 31.5394L54.8404 31.203L54.0135 32.1584L43.5676 44.2271L42.7182 45.2087L43.2687 46.3842C47.4259 55.2608 46.003 63.9128 41.584 68.3318C40.8683 69.0475 40.1587 69.2911 39.5476 69.2798C38.9271 69.2681 38.1522 68.9876 37.3402 68.1756L24.0385 54.8739L22.6243 53.4597L21.2101 54.8739L9.75649 66.3275C8.0822 68.0017 6.19501 69.1886 4.67968 69.8839C5.37073 68.3679 6.55726 66.4798 8.23303 64.804L19.6866 53.3504Z\" fill=\"currentColor\" stroke=\"black\" stroke-width=\"4\"></path>\n                    </svg>\n                </div>\n            </div>\n            <a w-el=\"module_link\" href=\"${module.module_link}\" class=\"open-task-button w-inline-block\">\n                <div class=\"task_open-text\">${completedText}</div>\n                <div class=\"icon-embed-xsmall w-embed\">\n                    <svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M14.5931 0.983396C14.5753 0.4314 14.1133 -0.00160407 13.5613 0.0162529L4.56602 0.307258C4.01402 0.325115 3.58102 0.787073 3.59887 1.33907C3.61673 1.89106 4.07869 2.32407 4.63068 2.30621L12.6265 2.04754L12.8852 10.0434C12.903 10.5954 13.365 11.0284 13.917 11.0105C14.469 10.9926 14.902 10.5307 14.8841 9.97869L14.5931 0.983396ZM2.16725 14.6684L14.3232 1.6996L12.864 0.331856L0.708052 13.3007L2.16725 14.6684Z\" fill=\"currentColor\"></path>\n                    </svg>\n                </div>\n            </a>\n        </div>\n        <a w-el=\"module_link\" href=\"${module.module_link}\" class=\"task_header-wrapper w-inline-block\">\n            <h3 w-el=\"module_title\" class=\"heading-style-h6\">${module.module_title}</h3>\n            <div class=\"spacer-small\"></div>\n            <p class=\"text-size-small\">${module.module_description}</p>\n        </a>\n    </div>\n</div>\n    `;\n}\n\nasync function getModules () {\n\n    // Construct the Authorization token\n    const wized_token = getCookie(\"wized_token\");\n    const token = \"Bearer \" + wized_token;\n\n    try {\n        const response = await fetch(BASE_URL + '/modules', {\n            method: 'GET',\n            headers: {\n                Authorization: token,\n            }\n        });\n\n        const data = await response.json();\n\n        if (response.ok) {\n            return data;\n        }\n\n    } catch (error) {\n        \n    }\n};\n\nfunction createHtmlObject() {\n    \n}\n\n// Usage:\n// let htmlObject = createHtmlObject();\n// document.body.innerHTML += htmlObject;\n\nexport async function render () {\n\n    const listWrapper = document.querySelector('[w-el=\"module_list\"]');\n    if (listWrapper.hasChildNodes) {\n        while (listWrapper.firstChild) {\n            listWrapper.removeChild(listWrapper.firstChild);\n        }\n    }\n\n    let pinnedList = [];\n    let normalList = [];\n    let completedList = [];\n\n    let data = await getModules();\n\n    let moduleList;\n\n    if (Array.isArray(data)) {\n        moduleList = data;\n    } else if (typeof data === 'object' && data !== null) {\n        moduleList = Object.values(data);\n    } else {\n        console.error(\"Data is neither an array nor an object:\", data);\n    }\n\n    console.log(moduleList);\n\n    moduleList.forEach(element => {\n        let htmlObject;\n        if(element.is_completed) {\n            htmlObject = createDashboardCard(element._modules[0],false,true);\n            completedList.push(htmlObject);\n        } else if (element.is_pinned) {\n            htmlObject = createDashboardCard(element._modules[0],true);\n            pinnedList.push(htmlObject);\n        } else if (element[0] === 0) {\n            //skip this element \n        } else {\n            htmlObject = createDashboardCard(element._modules[0]);\n            normalList.push(htmlObject);\n        }\n    })\n    pinnedList.forEach(element => {\n        listWrapper.innerHTML += element;\n    });\n\n    normalList.forEach(element => {\n        listWrapper.innerHTML += element;\n    });\n\n    completedList.forEach(element => {\n        listWrapper.innerHTML += element;\n    });\n\n\n\n        \n\n    \n\n}\n","import {checkAuthentication, displayUser} from './modules/auth.js';\nimport * as Login from './modules/pages/account/login.js';\nimport * as Signup from './modules/pages/account/signup.js';\nimport * as Onboarding from './modules/pages/account/onboarding.js';\nimport * as SendMailVerification from './modules/pages/account/send_mail_verification.js';\nimport * as EmailVerification from './modules/pages/account/verify_mail.js';\nimport * as Dashboard from './modules/pages/app/dashboard.js';\n\nconst account_routes = {\n    '/account/login' : Login.render,\n    '/account/signup' : Signup.render,\n    '/account/onboarding' : Onboarding.render,\n    '/account/verify-email' : SendMailVerification.render,\n    '/account/email-verification' : EmailVerification.render\n}\n\nconst app_routes = {\n    '/app/dashboard' : Dashboard.render,\n}\n\n\nconsole.log(AUTH_URL);\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    const path = window.location.pathname;\n\n    if (path.startsWith('/app/')) {\n        checkAuthentication();\n        displayUser();\n\n        if (app_routes[path]) {\n            app_routes[path]();\n        }\n\n    } else if (path.startsWith('/account/')) {\n\n        if (account_routes[path]) {\n            account_routes[path]();\n        }\n    }\n\n\n});","import { getCookie, setCookie, redirectToDashboard } from \"../../auth\";\n\nexport function render () {\n    if (window.Webflow) {\n        window.Webflow.push(async () => {\n            try {\n                let errorDiv;\n                let successDiv;\n    \n                // 1. Remove w-form to prevent Webflow from handling it\n                const formElement = document.getElementById('wf-form-Login-Form');\n    \n                if (formElement && formElement.parentElement) {\n                    formElement.parentElement.classList.remove('w-form');\n    \n                    // 2. Find the error and success divs\n                    errorDiv = formElement.parentElement.querySelector('[w-el=\"error\"]');\n                    errorDiv.style.display = 'none';\n    \n                    // 3. Add our own submit handler\n                    formElement.onsubmit = async (event) => {\n                        try {\n                            event.preventDefault();\n\n                            const submitButton = document.querySelector('[w-el=\"submitButton\"]');\n                            submitButton.value = submitButton.getAttribute('data-wait');\n    \n                            // 4. Get the form data\n                            const formData = new FormData(formElement);\n\n                            // Create a new FormData object\n                            const submitFormData = new FormData();\n                            \n                            // Iterate over the original FormData\n                            for (let [key, value] of formData.entries()) {\n                                if (key === 'login_email') {\n                                    submitFormData.append('email', value);\n                                } else if (key === 'login_password') {\n                                    submitFormData.append('password', value);\n                                } else {\n                                    // Append any other key-value pairs without modification\n                                    submitFormData.append(key, value);\n                                }\n                            }\n                            \n                            // 5. Get the form entries as an object\n                            const data = Object.fromEntries(submitFormData.entries());\n                            \n                            // 6. Send the data to the server\n                            const response = await fetch(AUTH_URL + '/auth/login', {\n                                method: 'POST',\n                                body: submitFormData,\n                                headers: {}\n                            });\n\n                            // 6. Handle the response\n                            const responseData = await response.json();\n\n                            if (response.ok) {\n                                setCookie(responseData.authToken);\n                                // redirect to Dashboard\n                                redirectToDashboard();\n                            }\n    \n                            else {\n                                \n                                if (responseData.message === \"No Account for this Email.\") {\n                                    errorDiv.firstChild.textContent = responseData.message;\n                    \n                                } else if (responseData.message === \"Invalid Credentials.\") {\n                                    errorDiv.firstChild.textContent = responseData.message;\n                                } else {\n                                    errorDiv.firstChild.textContent = \"Something went wrong... Please try again in a few minutes. If the error persists please contact us: hello@getworldify.com.\"\n                                }\n\n                                errorDiv.style.display = 'block';\n                            }\n\n                            submitButton.value = \"Login\";\n                        \n                        } catch (error) {\n                            // 7. Handle the error\n                            console.error(\"Error during login:\", error);\n                        }\n                    }\n                };\n            } catch (e) {\n                console.error('error', e);\n                // errorDiv.style.display = 'block';\n            }\n        });\n    }\n}\n\n","import { check_password, getCookie, setCookie, redirectToOnboarding } from \"../../auth\";\n\nexport function render () {\n\n    let isValidPassword = false;\n    // 1. Remove w-form to prevent Webflow from handling it\n    const formElement = document.getElementById('wf-form-Signup-Form');\n    let errorDiv = formElement.parentElement.querySelector('[w-el=\"error\"]');\n    errorDiv.style.display = 'none';\n    let successDiv;\n\n\n    const password1 = document.querySelector('[w-el=\"signup_password\"]');\n    const password2 = document.querySelector('[w-el=\"signup_password2\"]');\n\n    password1.addEventListener('change', function () {\n        isValidPassword = check_password(password1.value,password2.value);\n        errorDiv.style.display = 'none';\n    });\n\n    password2.addEventListener('change', function () {\n        isValidPassword = check_password(password1.value,password2.value);\n        errorDiv.style.display = 'none';\n    });\n\n    if (window.Webflow) {\n        window.Webflow.push(async () => {\n            try {\n\n                console.log(formElement);\n    \n                if (formElement && formElement.parentElement) {\n                    formElement.parentElement.classList.remove('w-form');\n    \n                    // 2. Find the error and success divs\n                    \n    \n                    // 3. Add our own submit handler\n                    formElement.onsubmit = async (event) => {\n                        try {\n\n                            event.preventDefault();\n\n                            const submitButton = document.querySelector('[w-el=\"submitButton\"]');\n                            submitButton.value = submitButton.getAttribute('data-wait');\n\n\n                            if (!isValidPassword) {\n                                errorDiv.firstChild.textContent = \"Please check the password requirements.\";\n                                errorDiv.style.display = 'block';\n                                submitButton.value = \"Signup\";\n                            } else {\n                                // 4. Get the form data\n                                const formData = new FormData(formElement);\n\n                                // Create a new FormData object\n                                const submitFormData = new FormData();\n\n                                // Iterate over the original FormData\n                                for (let [key, value] of formData.entries()) {\n                                    if (key === 'signup_email') {\n                                        submitFormData.append('email', value);\n                                    } else if (key === 'signup_password') {\n                                        submitFormData.append('password', value);\n                                    }\n                                }\n                                \n                                // 5. Get the form entries as an object\n                                const data = Object.fromEntries(submitFormData.entries());\n                                console.log(data);\n                                \n                                // 6. Send the data to the server\n                                const response = await fetch(AUTH_URL + '/auth/signup_form', {\n                                    method: 'POST',\n                                    body: submitFormData,\n                                    headers: {}\n                                });\n\n                                // 6. Handle the response\n                                const responseData = await response.json();\n\n                                console.log(responseData);\n\n                                if (response.ok) {\n                                    setCookie(responseData.authToken);\n                                    // redirect to Dashboard\n                                    redirectToOnboarding();\n                                }\n        \n                                else {\n                                    /*\n                                    if (responseData.message === \"No Account for this Email.\") {\n                                        errorDiv.firstChild.textContent = responseData.message;\n                        \n                                    } else if (responseData.message === \"Invalid Credentials.\") {\n                                        errorDiv.firstChild.textContent = responseData.message;\n                                    } else {\n                                        errorDiv.firstChild.textContent = \"Something went wrong... Please try again in a few minutes. If the error persists please contact us: hello@getworldify.com.\"\n                                    }\n                                    */\n\n                                    errorDiv.style.display = 'block';\n                                }\n                                submitButton.value = \"Signup\";\n                            }\n                        } catch (error) {\n                            // 7. Handle the error\n                            console.error(\"Error during login:\", error);\n                        }\n                    \n                    }\n                    \n                };\n            } catch (e) {\n                console.error('error', e);\n                // errorDiv.style.display = 'block';\n            }\n        });\n    }\n}\n\n","import { getCookie, redirectVerifyEmail } from \"../../auth\";\n\nexport function render () {\n\n    // 1. Remove w-form to prevent Webflow from handling it\n    const formElement = document.getElementById('wf-form-Onboarding-Form');\n\n    if (window.Webflow) {\n        window.Webflow.push(async () => {\n            try {\n\n                console.log(formElement);\n    \n                if (formElement && formElement.parentElement) {\n                    formElement.parentElement.classList.remove('w-form');\n\n                    let errorDiv = formElement.parentElement.querySelector('[w-el=\"error\"]');\n                    errorDiv.style.display = 'none';\n                    let successDiv;\n                    \n                    // 3. Add our own submit handler\n                    formElement.onsubmit = async (event) => {\n                        try {\n\n                            event.preventDefault();\n\n                            const submitButton = document.querySelector('[w-el=\"submitButton\"]');\n                            submitButton.value = submitButton.getAttribute('data-wait');\n\n                            // 4. Get the form data\n                            const formData = new FormData(formElement);\n\n                            // Create a new FormData object\n                            const submitFormData = new FormData();\n\n                            const userAddress = {\n                                address_line_1 : \"\",\n                                address_line_2 : \"\",\n                                city : \"\",\n                                zip : \"\",\n                                state : \"\",\n                                country : \"\"\n                            }\n\n                            const userBirthDay = {\n                                year : \"\",\n                                month : \"\",\n                                day : \"\"\n                            }\n\n                            // Iterate over the original FormData\n                            for (let [key, value] of formData.entries()) {\n                                if (key === 'onboarding_firstname') {\n                                    submitFormData.append('firstname', value);\n                                } else if (key === 'onboarding_middlename') {\n                                    submitFormData.append('middle_name', value);\n                                } else if (key === 'onboarding_lastname') {\n                                    submitFormData.append('lastname', value);\n                                } else if (key === 'onboarding_birth_day') {\n                                    if (value.length <2) {\n                                        userBirthDay.day = \"0\" + value;\n                                    } else {\n                                        userBirthDay.day = value;\n                                    }\n                                } else if (key === 'onboarding_birth_month') {\n                                    if (value.length <2) {\n                                        userBirthDay.month = \"0\" + value;\n                                    } else {\n                                        userBirthDay.month = value;\n                                    }\n                                } else if (key === 'onboarding_birth_year') {\n                                    userBirthDay.year = value;\n                                } else if (key === 'onboarding_citizenship1') {\n                                    submitFormData.append('citizenship', value);\n                                } else if (key === 'onboarding_citizenship2') {\n                                    submitFormData.append('citizenship_2', value);\n                                } else if (key === 'onboarding_addressLine1') {\n                                    userAddress.address_line_1 = value;\n                                } else if (key === 'onboarding_addressLine2') {\n                                    userAddress.address_line_2 = value;\n                                } else if (key === 'onboarding_city') {\n                                    userAddress.city = value;\n                                } else if (key === 'onboarding_zip') {\n                                    userAddress.zip = value;\n                                } else if (key === 'onboarding_state') {\n                                    userAddress.state = value;\n                                } else if (key === 'onboarding_country') {\n                                    userAddress.country = value;\n                                } else if (key === 'onboarding_residenceStatus') {\n                                    submitFormData.append('german_residence_status', value);\n                                } else if (key === 'onboarding_gender_passport') {\n                                    submitFormData.append('gender_passport', value);\n                                } else if (key === 'onboarding_gender_chosen') {\n                                    submitFormData.append('gender_chosen', value);\n                                } else if (key === 'onboarding_marriageStatus') {\n                                    submitFormData.append('marriage_status', value);\n                                } else if (key === 'onboarding_parentalStatus') {\n                                    submitFormData.append('parental_status', value);\n                                } \n                            }\n\n                            const userbirthString = `${userBirthDay.year}-${userBirthDay.month}-${userBirthDay.day}`;\n                            const updatedUserAddress = JSON.stringify(userAddress);\n\n                            submitFormData.append('birth_date',userbirthString);\n                            submitFormData.append('address',updatedUserAddress);\n                            \n                            // 5. Get the form entries as an object\n                            const data = Object.fromEntries(submitFormData.entries());\n                            console.log(data);\n\n                            // Construct the Authorization token\n                            const wized_token = getCookie(\"wized_token\");\n                            const token = \"Bearer \" + wized_token;\n                            \n                            // 6. Send the data to the server\n                            const response = await fetch(AUTH_URL + '/auth/onboarding', {\n                                method: 'POST',\n                                body: submitFormData,\n                                headers: {\n                                    Authorization: token,\n                                }\n                            });\n\n                            // 6. Handle the response\n                            const responseData = await response.json();\n\n                            console.log(responseData);\n\n                            console.log(response);\n\n                            if (response.ok) {\n                                if(!responseData.is_verified) {\n                                    //send email verification\n                                    redirectVerifyEmail();\n                                }\n                                \n\n                                \n                                \n                            }\n    \n                            else {\n                                \n                                if (responseData.message === \"No Account for this Email.\") {\n                                    errorDiv.firstChild.textContent = responseData.message;\n                    \n                                } else if (responseData.message === \"Invalid Credentials.\") {\n                                    errorDiv.firstChild.textContent = responseData.message;\n                                } else {\n                                    errorDiv.firstChild.textContent = \"Something went wrong... Please try again in a few minutes. If the error persists please contact us: hello@getworldify.com. Please add the following error message: \"+response.message;\n                                }\n\n                                errorDiv.style.display = 'block';\n                            }\n                            \n                            submitButton.value = \"Submit\";\n                        \n                        } catch (error) {\n                            // 7. Handle the error\n                            console.error(\"Error during onboarding:\", error);\n                        }\n                    \n                    }\n                    \n                };\n            } catch (e) {\n                console.error('error', e);\n                // errorDiv.style.display = 'block';\n            }\n        });\n    }\n}\n\n","import { getCookie, getUser, redirectToLogin, redirectToVerificationPending, sendVerificationMail } from \"../../auth\";\n\nexport async function render () {\n\n\n    const verifyEmailComponent = document.querySelector('[w-el=\"verifyMail_component\"]');\n    const alreadyVerifiedComponent = document.querySelector('[w-el=\"alreadyVerified_component\"]');\n    const submitButton = document.querySelector('[w-el=\"submitButton\"]');\n    const errorWrapper = document.querySelector('[w-el=\"error\"]');\n    const firstname = document.querySelectorAll('[w-el=\"firstname\"]');\n\n    const token = getCookie('wized_token');\n\n    const user = await getUser(token);\n\n\n    firstname.forEach(name => {\n        name.textContent = user.firstname;\n    });\n\n    console.log(user);\n\n    if (user.id) {\n        //its a user\n        if (user.is_verified) {\n            // display card Email is already verified\n            alreadyVerifiedComponent.classList.remove('hide');\n            \n        } else {\n            try {\n\n                verifyEmailComponent.classList.remove('hide');\n                //send email with verification link\n                submitButton.addEventListener('click', async function () {\n                    submitButton.firstChild.textContent = 'Please wait ...';\n                    var response = await sendVerificationMail(user.email, \"email_verification\",DOMAIN_URL+\"/account/email-verification\");\n                    submitButton.firstChild.textContent = 'Send Verification Email';\n                    \n                    if (response.message.success) {\n                        redirectToVerificationPending();\n                    } else {\n                        errorWrapper.classList.remove('hide');\n                        errorWrapper.firstChild.textContent = response.message;\n                    }\n                });\n                \n            } catch (error) {\n                console.error(\"Error during email verification:\", error);\n            }     \n\n        }\n        \n    } else {\n        redirectToLogin();\n    }\n        \n\n        \n    \n        //is verified???\n\n    document.addEventListener(\"DOMContentLoaded\", async function() {\n\n        \n    \n    \n    });\n\n}\n\n","import { getCookie, setCookie, redirectToDashboard, getQueryParam, getUser, deleteCookie} from \"../../auth\";\n\nexport async function render () {\n\n    const magicToken = getQueryParam('token');\n    const successMessage = document.querySelector('[w-el=\"verification_successMessage\"]');\n    const firstname = document.querySelector('[w-el=\"firstname\"]');\n    const failedMessage = document.querySelector('[w-el=\"verification_failedMessage\"]');\n    const submitButton = document.querySelector('[w-el=\"submitButton\"]');\n    //const buttonWrapper = document.querySelector('[w-el=\"mailVerification_buttonWrapper\"]');\n\n    console.log(magicToken);\n\n\n    const formData = new FormData();\n\n    formData.append('magic_token',magicToken);\n\n    try {\n        const response = await fetch(AUTH_URL + '/auth/magic-login', {\n            method: 'POST',\n            headers: {},\n            body: formData\n        });\n\n        const data = await response.json();\n\n        console.log(data);\n        console.log(response);\n\n        if (response.ok) {\n            const token = data;\n\n            setCookie(token);\n\n            const user = await getUser(token);\n\n            firstname.textContent = user.firstname;\n\n            successMessage.classList.remove('hide');\n\n            console.log(token);\n\n        } else {\n\n            failedMessage.classList.remove('hide');\n            console.error('Magic Login failed:', response.statusText);\n        }\n    } catch (error) {\n        console.error('Error with magic login:', error);\n    }\n}"],"names":["TOKEN_KEY","getCookie","name","parts","document","cookie","split","length","pop","shift","setCookie","value","deleteCookie","check_password","x","y","constraint_characters","getElementById","constraint_upperlower","constraint_number","constraint_special","constraint_correctness","isLengthValid","isUpperLowerValid","isNumberValid","isSpecialValid","isCorrectnessValid","classList","remove","contains","add","test","getQueryParam","paramName","URLSearchParams","window","location","search","get","async","sendVerificationMail","email","sendgrid_template","redirect_uri","formData","FormData","append","response","fetch","method","headers","body","jsonResponse","json","ok","error","console","verifyToken","token","data","id","message","getUser","checkAuthentication","redirectToLogin","displayUser","firstnames","querySelectorAll","lastnames","emails","user","forEach","firstname","textContent","lastname","href","redirectToEmailVerification","redirectToDashboard","redirectToOnboarding","redirectToVerificationPending","redirectToPasswordPending","redirectVerifyEmail","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","createDashboardCard","is_pinned","is_completed","pinClass","completedClass","completedText","module_link","module_title","module_description","account_routes","Webflow","push","errorDiv","formElement","parentElement","querySelector","style","display","onsubmit","event","preventDefault","submitButton","getAttribute","submitFormData","entries","fromEntries","responseData","authToken","firstChild","e","isValidPassword","password1","password2","addEventListener","log","userAddress","address_line_1","address_line_2","city","zip","state","country","userBirthDay","year","month","day","userbirthString","updatedUserAddress","JSON","stringify","Authorization","is_verified","verifyEmailComponent","alreadyVerifiedComponent","errorWrapper","success","magicToken","successMessage","failedMessage","statusText","app_routes","listWrapper","hasChildNodes","removeChild","moduleList","pinnedList","normalList","completedList","getModules","Array","isArray","values","element","htmlObject","_modules","innerHTML","path","pathname","startsWith"],"sourceRoot":""}